<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style type="text/css">
        #map-canvas {
            height: 200px;
            width: 100%;
        }

        .truncate {
          width: 250px;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .indent-nav{
            margin-left: 30px;
        }
    </style>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="/" class="navbar-brand">GET RICH QUICK using Sitecore Search</a>
            </div>
        </div>
    </div>
    <div class="container body-content">


        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC_163hv1AnGALuQWIXByCcB6V1wZe4_UQ&sensor=false&libraries=geometry"></script>
    <script type="text/javascript">
        function initialize() {
            
            initialised = false;

            var lat = Number($("#Criteria_PointRadius_Latitude").attr("value"));
            var lng = Number($("#Criteria_PointRadius_Longitude").attr("value"));
            var zoom = Number($("#ZoomLevel").attr("value"));
            var zoom = (!isNaN(zoom) ? zoom : 8)

        
            var mapOptions = {
                center: new google.maps.LatLng((!isNaN(lat) ? lat : 0), (!isNaN(lng) ? lng : 0)),
                zoom: zoom
            };
            var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

            google.maps.event.addListener(map, 'idle', function (ev) {
                var bounds = map.getBounds();
                var ne = bounds.getNorthEast(); // LatLng of the north-east corner
                var center = map.getCenter();
                $("#Criteria_PointRadius_Latitude").attr("value", center.lat());
                $("#Criteria_PointRadius_Longitude").attr("value", center.lng());
                $("#Criteria_PointRadius_RadiusKm").attr("value", google.maps.geometry.spherical.computeDistanceBetween(center, ne) / 1000);
            });

            google.maps.event.addListener(map, 'zoom_changed', function () {
                $("#ZoomLevel").attr("value", map.getZoom());
            });

            //google.maps.event.addListener(map, 'bounds_changed', function () {
            //    if(!initialised)
            //    {
            //        initialised = true;

            //        var lat = Number($("#Criteria_PointRadius_Latitude").attr("value"));
            //        var lng = Number($("#Criteria_PointRadius_Longitude").attr("value"));
            //        var radius = Number($("#Criteria_PointRadius_RadiusKm").attr("value")) * 1000;

            //        var center = map.getCenter();
            //        var bounds = map.getBounds();
            //        var ne = bounds.getNorthEast();
            //        var neHeading = google.maps.geometry.spherical.computeHeading(center, ne);
            //        var neOffset = google.maps.geometry.spherical.computeOffset(center, radius, neHeading);
            //        var sw = bounds.getSouthWest();
            //        var swHeading = google.maps.geometry.spherical.computeHeading(center, sw);
            //        var swOffset = google.maps.geometry.spherical.computeOffset(center, radius, swHeading);
            //        map.fitBounds(new google.maps.LatLngBounds(sw, ne));
            //    }
            //});
        }
        google.maps.event.addDomListener(window, 'load', initialize);

        $(document).ready(function () {

            $('.more-popover').popover();

        });
    </script>
</body>
</html>
